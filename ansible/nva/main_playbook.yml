---

- name: Configuring NVA Machine
  hosts: localhost
  gather_facts: yes
  become: yes
  tasks:
    - name: Allowing IP Forwwarding
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        reload: yes

    - name: Installing Cloudflare ZTNA Tunnel - Debian/Ubuntu
      block:
        - name: Making gpg keyrings directory
          ansible.builtin.file:
            path: /usr/share/keyrings
            state: directory
            mode: '0755'

        - name: Downloading Cloudflare GPG key
          ansible.builtin.get_url:
            url: https://pkg.cloudflare.com/cloudflare-main.gpg
            dest: /usr/share/keyrings/cloudflare-main.gpg
            mode: '0644'

        - name: Adding Cloudflare APT repository
          copy:
            dest: /etc/apt/sources.list.d/cloudflared.list
            content: "deb [signed-by=/usr/share/keyrings/cloudflare-main.gpg] https://pkg.cloudflare.com/cloudflared any main\n"
            owner: root
            group: root
            mode: '0644'

        - name: Updating APT package index
          ansible.builtin.apt:
            update_cache: yes


        - name: Installing Cloudflared
          ansible.builtin.apt:
            name: cloudflared
            state: present

        - name: Installing Cloudflared as a systemd service
          ansible.builtin.shell: "cloudflared service install {{ tunnel_token }}"

        - name: Configuring Cloudflare Tunnel
          ansible.builtin.systemd:
            name: cloudflared
            state: started
            enabled: true
            masked: false

    - name: Configuring UFW
      block:
        - name: Enable UFW
          community.general.ufw:
            state: enabled
            policy: deny
        
        - name: Allow SSH
          community.general.ufw:
            rule: allow
            name: 'OpenSSH'

        - name: Allow access from Frontend Subnet to Backend Subnet
          community.general.ufw:
            rule: allow
            from_ip: "{{ frontend_subnet }}"
            to_ip: "{{ backend_subnet }}"
            port: "{{ backend_port }}"
            proto: tcp
        
        - name: Set UFW default policy for routed traffic
          community.general.ufw:
            policy: allow
            direction: routed
        
        - name: Reload UFW
          community.general.ufw:
            state: reloaded

    - name: Configuring NAT for Internet Access
      block:
        - name: Add iptables NAT rule for VNet traffic
          ansible.builtin.iptables:
            table: nat
            chain: POSTROUTING
            source: "{{ backend_subnet}}"
            out_interface: eth0
            jump: MASQUERADE
            state: present
      
        
        